version: "3"
services:
  redis:
    image: redis:latest
    restart: on-failure
    env_file:
      - .env
    expose:
      - "6379"

  db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", '-c', "pg_isready -U $POSTGRES_USER" ]
      interval: 6s
      retries: 5
      timeout: 5s
  app:
    build: .
    tty: true
    ports:
      - '8000:8000'
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    volumes:
      - .:/app
    depends_on:
      - db
      - app
      - redis
    env_file:
      - .env
    restart: on-failure


  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO
    volumes:
      - .:/app
    depends_on:
      - db
      - app
      - redis
    env_file:
      - .env
    restart: on-failure


volumes:
  pg_data:



